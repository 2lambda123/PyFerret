/*
 *		Copyright IBM Corporation 1989
 *
 *                      All Rights Reserved
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for any purpose and without fee is hereby granted,
 * provided that the above copyright notice appear in all copies and that
 * both that copyright notice and this permission notice appear in
 * supporting documentation, and that the name of IBM not be
 * used in advertising or publicity pertaining to distribution of the
 * software without specific, written prior permission.
 *
 * IBM DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
 * ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
 * IBM BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
 * ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
 * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 * ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 * SOFTWARE.
 *
 *
 * FORTRAN to C binding for XGKS
 *
 * GKS inquire error list functions :
 *	gqiqov_
 *
 *
 * David Berkowitz
 * Bruce Haimowitz
 * Todd Gill
 * TCS Development
 * Cambridge MA
 *
 * August 31 1988
 */

/*LINTLIBRARY*/

#include "udposix.h"
#include <stdlib.h>
#include "xgks.h"
#include "fortxgks.h"

#ifndef lint
    static char afsid[] = "$__Header$";
    static char rcsid[] = "$Id$";
#endif


/*
 * gqiqov - Inquire Input Queue Overflow
 *
 * int	*errind		- pointer to error indicator
 * int	*wkid		- pointer to workstation identifier
 * int	*icl		- pointer to input class (GLOCAT, GSTROK, GVALUA,
 *						  GCHOIC, GPICK, GSTRIN)
 * int	*idn		- pointer to input device number
 *
 * Returns: ANSI standard errors for this function.
 *
 * See also: ANSI standard p.192
 */
/*FORTRAN*/
gqiqov(
    int            *errind,
    int            *wkid,
    int            *icl,
    int            *idn)
{
    Gqueue          overflow;

    debug(("Inquire Input Queue Overflow  \n"));

    if (*errind = ginqinputoverflow(&overflow))
	return;

    *icl = (int) overflow.class;
    *idn = (int) overflow.devno;
}
