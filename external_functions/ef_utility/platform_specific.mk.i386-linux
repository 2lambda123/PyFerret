#
# platform_specific_includes.mk.i386-linux
#
# This file is included in the External Function Makefiles and defines
# platform specific macros

# this assumes INSTALL_FER_DIR and PYTHON_EXE has already been defined
# in site_specific.mk

INCLUDES	= -I. -I../ef_utility -I../ef_utility/ferret_cmn

CC		= $(shell which gcc)
CFLAGS		= -fPIC -m32 -O -Ddouble_p $(INCLUDES)

FC		= $(shell which gfortran)
F77		= $(shell which gfortran)
FFLAGS		= -fPIC -m32 -O -Ddouble_p -fno-second-underscore \
		  -fno-backslash -fdollar-ok -ffixed-line-length-132 \
		  -fdefault-real-8 -fdefault-double-8 -malign-double $(INCLUDES)

LD		= $(shell which gfortran)
LD_DYN_FLAGS	= -fPIC -m32 -shared -Wl,--no-undefined
SYSLIBS		= ../ef_utility/copy_ferret_ef_mem_subsc.o \
		  -L$(INSTALL_FER_DIR)/lib/$(PYTHON_EXE)/site-packages/pyferret \
		  -lpyferret

CFLAGS_DEBUG	= -O0 -g -Ddebug
FFLAGS_DEBUG	= -O0 -g -fbounds-check -Ddebug

# Directly compile the .F source files to the .o object files
# since gfortran can handle the C compiler directives in Fortran code
%.o : %.F
	$(FC) $(FFLAGS) -c $*.F -o $*.o

