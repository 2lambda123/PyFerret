* GUI.PARM
* parameters for communication between FERRET and GUI control PROGRAM

* these parameters describe the first few integers of the buffer
* returned by FERRET to its GUI
	INTEGER
     .			frtn_control,
     .			frtn_status,
     .			frtn_action,
     .			frtn_idata1,
     .			frtn_idata2,
     .			frtn_idata3
	PARAMETER(
     .			frtn_control = 1,
     .			frtn_status  = 2,
     .			frtn_action  = 3,
     .			frtn_idata1  = 6,
     .			frtn_idata2  = 7,
     .			frtn_idata3  = 8 )


* who is in control according to return_buff(frtn_control) ?
* when the GUI is running FERRET control may return to the GUI at times
* other than at the completion of a command - for example, when FERRET
* is requesting that a warning message be displayed or that memory be
* reconfigured.  These codes indicate why FERRET has returned.
* FERRET will reset the control variable to "ctrl_not_finished" if
* the given command was really multiple commands and they are not yet complete
	INTEGER		fctrl_back_to_gui,
     .			fctrl_in_ferret
	PARAMETER     (	fctrl_back_to_gui = 1,
     .			fctrl_in_ferret   = 2 )

* what special action has FERRET requested in return_buff(frtn_action) ?
	INTEGER
     .			factn_no_action,
     .			factn_mem_reconfigure,
     .			factn_exit,
     .			factn_display_warning,
     .			factn_display_error,
     .			factn_display_text,
     .			factn_synch_set_data,
     .			factn_synch_let,
     .			factn_synch_window,
     .			factn_pause

	PARAMETER (
     .			factn_no_action		= 0,
     .			factn_mem_reconfigure	= 1,
     .			factn_exit		= 2,
     .			factn_display_warning	= 3,
     .			factn_display_error	= 4,
     .			factn_display_text	= 5,
     .			factn_synch_set_data    = 6,
     .			factn_synch_let         = 7,
     .			factn_synch_window      = 8,
     .			factn_pause		= 10)

* output modes
	INTEGER		ftxout_replace,
     .			ftxout_append,
     .			ftxout_new
	PARAMETER     (	ftxout_replace = 0,
     .			ftxout_append  = 1,
     .			ftxout_new     = 3 )
