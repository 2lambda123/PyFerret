## Site-dependent definitions included in Makefiles

## !!! Also verify the values in external_functions/ef_utility/site_specific.mk !!!

## =========================
## Full path name of the directory containing this file (the ferret root directory).
## Do not use $(shell pwd) since this is included in Makefiles in other directories.
## =========================
# DIR_PREFIX = $(HOME)/build/trunk/FERRET
DIR_PREFIX = $(HOME)/git/Ferret
# DIR_PREFIX = $(HOME)/svn/ferret

## =========================
## Machine for which to build Ferret.
## Use $(HOSTTYPE) to build natively for the machine you are using.
## =========================
# BUILDTYPE = $(HOSTTYPE)
BUILDTYPE = x86_64-linux
# BUILDTYPE = i386-linux
# BUILDTYPE = intel-mac

## =========================
## Installation directory for built Ferret using the "install" Makefile target.
## This Makefile target circumvents the need to create the fer_*.tar.gz files
## just for creating a Ferret installation.
## =========================
# INSTALL_FER_DIR = $(HOME)/ferret_distributions/rhel6_64
INSTALL_FER_DIR = $(HOME)/Ferret
# INSTALL_FER_DIR = $(FER_DIR)

## =========================
## C and Fortran compilers to use.  The construct "$(shell which gcc)" assigns
## the response to "which gcc" run from a Bourne shell (such as bash).
## When compiling for Mac OS X, one may wish to use clang instead of gcc.
## If you wish to use values already defined in you shell environment when 
## you run make, comment out all definitions of CC and FC (do NOT leave blank).
## =========================
# CC = $(shell which clang)
CC = $(shell which gcc)
FC = $(shell which gfortran)

## =========================
## C and Fortran compilers to use.  The construct "$(shell which gcc)" assigns
## the response to "which gcc" run from a Bourne shell (such as bash).
## When compiling for Mac OS X, one may wish to use clang instead of gcc.
## If you wish to use values already defined in you shell environment when 
## you run make, comment out all definitions of CC and FC (do NOT leave blank).
## =========================
# CC = $(shell which clang)
CC = $(shell which gcc)
FC = $(shell which gfortran)

## =========================
## Python executable to invoke for build and install.
## =========================
HDF5_LIBDIR = /usr/local/hdf5-1.10.5/lib
# HDF5_LIBDIR = $(HOME)/.local/lib
# HDF5_LIBDIR = /usr/local/lib
# HDF5_LIBDIR = /usr/lib64
# HDF5_LIBDIR = /usr/lib
# HDF5_LIBDIR =

## =========================
## Location of the SZ compression static library.
## This value should be given only if the SZ compression library was used in
## building the HDF5 library, and the NetCDF and HDF5 static libraries are
## being used (HDF5_LIBDIR is specified).
##
## If given and not empty, and if HDF5_LIBDIR is given and not empty, the SZ
## compression static library is used.
##
## If empty or not given, and if HDF5_LIBDIR is given and not empty, the SZ
## compression library will not be used, which is what you want if the HDF5
## libraries were built using the Z compression library.
## =========================
# SZ_LIBDIR = $(HOME)/.local/lib
# SZ_LIBDIR = /usr/local/lib
# SZ_LIBDIR = /usr/lib64
# SZ_LIBDIR = /usr/lib
SZ_LIBDIR =

## =========================
## Location of the NetCDF libraries.
## Include files are assumed to be located in an "include" sibling directory.
## If HDF5_LIBDIR is given and not empty, the static libraries will be used.
## If HDF5_LIBDIR is empty or not given, NetCDF shared-object libraries will be used.
## =========================
NETCDF_LIBDIR = /usr/local/netcdf-4.6.3/lib
# NETCDF_LIBDIR = $(HOME)/.local/lib
# NETCDF_LIBDIR = /usr/local/lib
# NETCDF_LIBDIR = /usr/lib64
# NETCDF_LIBDIR = /usr/lib

## =========================
## Directory containing the (GNU) readline static libraries.
## Include files are assumed to be located in an "include" sibling directory.
##
## If the readline provided by the system is not actually (GNU) readline (e.g.;
## on Mac, where it is actually editline), it may not have the ability to specify
## a function to repeatedly call while waiting for user input (the rl_event_hook).
## Ferret uses this ability to keep plot windows refreshed and responsive, so in
## this case, an actual GNU readline (and history) static library must be built
## and installed.
##
## If the readline provided by the system does provide this required functionality
## (i.e; is GNU readline, which is the case for most Linux systems), do not define
## this value (or leave it blank).  In this case the system's readline and history
## shared-object libraries will be used.
## =========================
# READLINE_LIBDIR = $(HOME)/.local/Cellar/readline/8.0.0/lib
# READLINE_LIBDIR = /usr/local/Cellar/readline/8.0.0/lib
READLINE_LIBDIR =

## =========================
## Directory containing the Cairo static libraries (v1.12 or later).
## Include files are assumed to be located in an "include" sibling directory.
## If given and not empty, the Cairo static libraries found under this directory will be used.
## If empty or not given, the system's Cairo shared libraries will be used.
## =========================
# CAIRO_LIBDIR = /usr/local/cairo-1.14.12/lib
# CAIRO_LIBDIR = $(HOME)/.local/lib
# CAIRO_LIBDIR = /usr/local/lib
CAIRO_LIBDIR =

## =========================
## Directory containing the Pixman static libraries used by the above Cairo static libraries.
## Include files are assumed to be located in an "include" sibling directory.
## If given and not empty, the Pixman-1 static libraries found in this directory will be used.
## If empty or not given, the system's Pixman-1 shared library will be used.
## This value should be empty or not given if CAIRO_LIBDIR is empty or not given.
## =========================
# PIXMAN_LIBDIR = /usr/local/pixman-0.34.0/lib
# PIXMAN_LIBDIR = $(HOME)/.local/lib
# PIXMAN_LIBDIR = /usr/local/lib
PIXMAN_LIBDIR =

## =========================
## Directory containing the Pango shared libraries.
## Include files are assumed to be located in an "include" sibling directory.
## If given and not empty, the Pango shared libraries under this directory are used.
## If empty or not given, the system's Pango shared libraries are used.
## This value should be empty or not given if CAIRO_LIBDIR is empty or not given.
## =========================
# PANGO_LIBDIR = $(HOME)/.local/lib
# PANGO_LIBDIR = /usr/local/lib
PANGO_LIBDIR =

## =========================
## Library directory containing a "glib-2.0" subdirectory with GLib-2.0 include file(s)
## (yes, a little unusual) used by the above Pango shared libraries.
## An "include" sibling directory containing a "glib-2.0" subdirectory with more
## GLib-2.0 include files is assumed to exist.
## If given and not empty, GLib-2.0 include files under this directory are used.
## If empty or not given, the system's GLib-2.0 shared libraries are used.
## This value should be empty or not given if PANGO_LIBDIR is empty or not given.
## =========================
# GLIB2_LIBDIR = $(HOME)/.local/lib
# GLIB2_LIBDIR = /usr/local/lib
GLIB2_LIBDIR =

## =========================
## Directory containing the HDF5 static libraries.
## Include files are assumed to be located in an "include" sibling directory.
## If given and not empty, HDF5 and NetCDF static libraries will be used.
## If empty or not given, NetCDF shared libraries (which specify the HDF5 and
## compression libraries required) will be used.
## =========================
HDF5_LIBDIR = /usr/local/hdf5-1.10.5/lib
# HDF5_LIBDIR = $(HOME)/.local/lib
# HDF5_LIBDIR = /usr/local/lib
# HDF5_LIBDIR = /usr/lib64
# HDF5_LIBDIR = /usr/lib
# HDF5_LIBDIR =

## =========================
## Location of the SZ compression static library.
## This value should be given only if the SZ compression library was used in
## building the HDF5 library, and the NetCDF and HDF5 static libraries are being
## used (HDF5_LIBDIR is given and not empty).
## If given and not empty, the SZ compression static library is used.
## If empty or not given, the SZ compression library will not be used
## (which is what you want if the HDF5 libraries were built using the Z compression library).
## =========================
# SZ_LIBDIR = $(HOME)/.local/lib
# SZ_LIBDIR = /usr/local/lib
# SZ_LIBDIR = /usr/lib64
# SZ_LIBDIR = /usr/lib
SZ_LIBDIR =

## =========================
## Location of the NetCDF libraries.
## Include files are assumed to be located in an "include" sibling directory.
## If HDF5_LIBDIR is given and not empty, the static libraries will be used
## (along with the HDF5 static libraries).
## If HDF5_LIBDIR is empty or not given, NetCDF shared libraries will be used.
## =========================
NETCDF_LIBDIR = /usr/local/netcdf-4.6.3/lib
# NETCDF_LIBDIR = $(HOME)/.local/lib
# NETCDF_LIBDIR = /usr/local/lib
# NETCDF_LIBDIR = /usr/lib64
# NETCDF_LIBDIR = /usr/lib

##
