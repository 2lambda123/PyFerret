*** Running test: bn_syntax.jnl
*** Running test: bn_dollar.jnl
*** Running test: bn_grave.jnl
*** Running test: bn_letd.jnl
*** Running test: bn_if.jnl
*** Running test: bn_expressions.jnl
*** Running test: bn_geometry.jnl
*** Running test: bn_output.jnl
*** Running test: bn_in_plane.jnl
*** Running test: bn_compress.jnl
*** Running test: bn_interpolate.jnl
*** Running test: bn_regrid.jnl
*** Running test: bn_ez.jnl
*** Running test: bn_plot.jnl
*** Running test: bn_curv.jnl
*** Running test: bn_symbols.jnl
*** Running test: bn_comma_delimited.jnl
*** Running test: bn_dynamic_grids.jnl
*** Running test: bn_cdf.jnl
*** Running test: bn_regrid_transforms.jnl
*** Running test: bn_axis_limits.jnl
*** Running test: bn_movie.jnl
*** Running test: bn_ez_order.jnl
*** Running test: bn_user.jnl
*** Running test: bn_stream.jnl
*** Running test: bn_mc.jnl
*** Running test: bn_negative_t.jnl
*** Running test: bn_xact_regrid.jnl
*** Running test: bn_gc_functions.jnl
*** Running test: bn491_bug_fixes.jnl
*** Running test: bn_odd_variable_name.jnl
*** Running test: bn_test_stream.jnl
*** Running test: bn_define_axes.jnl
*** Running test: bn_polygon.jnl
*** Running test: bn500_bug_fixes.jnl
err491_dp_time_write.jnl --- 1 original file
netcdf out {
dimensions:
	T5 = UNLIMITED ; // (1 currently)
variables:
	double T5(T5) ;
		T5:units = "min since 1901-01-15 00:00:00" ;
		T5:axis = "T" ;
		T5:calendar = "GREGORIAN" ;
		T5:time_origin = "15-JAN-1901" ;
		T5:standard_name = "time" ;
	double MY_VAR(T5) ;
		MY_VAR:missing_value = -1.e+34 ;
		MY_VAR:_FillValue = -1.e+34 ;
		MY_VAR:long_name = "T[GT=T5]" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 T5 = 50757969 ;

 MY_VAR = 50757969 ;
}
err491_dp_time_write.jnl --- 2 after append
netcdf out {
dimensions:
	T5 = UNLIMITED ; // (2 currently)
variables:
	double T5(T5) ;
		T5:units = "min since 1901-01-15 00:00:00" ;
		T5:axis = "T" ;
		T5:calendar = "GREGORIAN" ;
		T5:time_origin = "15-JAN-1901" ;
		T5:standard_name = "time" ;
	double MY_VAR(T5) ;
		MY_VAR:missing_value = -1.e+34 ;
		MY_VAR:_FillValue = -1.e+34 ;
		MY_VAR:long_name = "T[GT=T5]" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 T5 = 50757969, 50757974 ;

 MY_VAR = 50757969, 50757974 ;
}
*** Running test: bn_sample.jnl
*** Running test: bn_strides_revs_perms.jnl
*** Running test: bn_non_COARDS_netCDF.jnl
*** Running test: bn_cache_hits.jnl
*** Running test: bn_regrid_to_user.jnl
*** Running test: bn_calendar.jnl
*** Running test: bn_dash_dot.jnl
*** Running test: bn_flowlines.jnl
*** Running test: bn_logaxes.jnl
*** Running test: bn_internal_external_functions.jnl
*** Running test: bn_modulo_strides.jnl
*** Running test: bn_axis_viewports.jnl
*** Running test: bn_strings.jnl
bn_strings.jnl --- 1 original file
netcdf test_string {
dimensions:
	XAX1_3 = 3 ;
	STRING1_10 = 10 ;
	STRING1_16 = 16 ;
variables:
	double XAX1_3(XAX1_3) ;
		XAX1_3:point_spacing = "even" ;
		XAX1_3:axis = "X" ;
	char A(XAX1_3, STRING1_10) ;
		A:long_name = "{\"hello\",\"goodbye\", \"wave to me\"}" ;
	char B(STRING1_16) ;
		B:long_name = "\"one line of text\"" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 XAX1_3 = 1, 2, 3 ;

 A =
  "hello",
  "goodbye",
  "wave to me" ;

 B = "one line of text" ;
}
bn_strings.jnl --- 2 append to file
bn_strings.jnl --- 3 enhanced heading
netcdf test_string {
dimensions:
	grid_definition = 1 ;
	XAX1_19 = 19 ;
	XAX1_192_5 = 4 ;
	STRING1_15 = 15 ;
variables:
	char GFP3(grid_definition) ;
		GFP3:axes = "XAX1_19 NORMAL NORMAL NORMAL NORMAL NORMAL" ;
	double XAX1_19(XAX1_19) ;
		XAX1_19:point_spacing = "even" ;
		XAX1_19:axis = "X" ;
	double XAX1_192_5(XAX1_192_5) ;
		XAX1_192_5:child_axis = " " ;
		XAX1_192_5:point_spacing = "even" ;
		XAX1_192_5:axis = "X" ;
	char D(XAX1_192_5, STRING1_15) ;
		D:parent_grid = "GFP3" ;
		D:slab_min_index = 2, 1, 1, 1 ;
		D:slab_max_index = 5, 1, 1, 1 ;
		D:long_name = "partial filename list" ;
		D:history = "From test_string" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 GFP3 = "" ;

 XAX1_19 = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 ;

 XAX1_192_5 = 2, 3, 4, 5 ;

 D =
  "dummy1.str_test",
  "dummy2.str_test",
  "dummy3.str_test",
  "dummy4.str_test" ;
}
bn_strings.jnl --- 4 sample and ysequence functions on string var
netcdf foo {
dimensions:
	XAX1_4 = 4 ;
	STRING1_1 = 1 ;
	YAX1_3 = 3 ;
variables:
	double XAX1_4(XAX1_4) ;
		XAX1_4:point_spacing = "even" ;
		XAX1_4:axis = "X" ;
	char A(XAX1_4, STRING1_1) ;
		A:long_name = "{\"a\",,\" \",\"\"}" ;
	double YAX1_3(YAX1_3) ;
		YAX1_3:point_spacing = "even" ;
		YAX1_3:axis = "Y" ;
	char B(YAX1_3, STRING1_1) ;
		B:long_name = "SAMPLEJ(YSEQUENCE({\"a\",\"b\",,\"d\",\"e\",\"f\"}),{2,,1})" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 XAX1_4 = 1, 2, 3, 4 ;

 A =
  "a",
  "",
  " ",
  "" ;

 YAX1_3 = 1, 2, 3 ;

 B =
  "b",
  "",
  "a" ;
}
*** Running test: bn_axcontrol.jnl
*** Running test: bn_vec_curv.jnl
*** Running test: bn_delimited_read.jnl
*** Running test: bn541_bug_fixes.jnl
*** Running test: bn_cancel_axes.jnl
*** Running test: bn542_bug_fixes.jnl
*** Running test: bn_subspan_modulo.jnl
*** Running test: bn_dots.jnl
*** Running test: bn_lev_symbols.jnl
*** Running test: bn_mode_logo_lab.jnl
*** Running test: bn_modulo_attribute.jnl
*** Running test: bn550_bug_fixes.jnl
*** Running test: bn551_bug_fixes.jnl
err550_nc_seconds.jnl --- seconds of time axis
		TIME:time_origin = "10-JUN-1996 04:03:36" ;
*** Running test: bn_multi_line_labels.jnl
*** Running test: bn552_bug_fixes.jnl
*** Running test: bn_set_var_scale_off.jnl
*** Running test: bn_longvarnames.jnl
*** Running test: bn_shakey.jnl
*** Running test: bn_eof_4d.jnl
*** Running test: bn_abstract_axis_names.jnl
*** Running test: bn_many_polygons.jnl
*** Running test: bn_fill_irregular.jnl
*** Running test: bn_xml_output.jnl
*** Running test: bn_test_nan.jnl
*** Running test: bn553_bug_fixes.jnl
*** Running test: bn_graticules.jnl
*** Running test: bn_repeat_range.jnl
*** Running test: bn554_bug_fixes.jnl
*** Running test: bn_bounds.jnl
bn_bounds.jnl --- 1 output of bounds on irreg axes.
netcdf a {
dimensions:
	MONTH_IRREG = UNLIMITED ; // (12 currently)
	bnds = 2 ;
variables:
	double MONTH_IRREG(MONTH_IRREG) ;
		MONTH_IRREG:units = "days since 0000-01-01 00:00:00" ;
		MONTH_IRREG:time_origin = "01-JAN-0000 00:00:00" ;
		MONTH_IRREG:modulo = " " ;
		MONTH_IRREG:axis = "T" ;
		MONTH_IRREG:standard_name = "time" ;
		MONTH_IRREG:bounds = "MONTH_IRREG_bnds" ;
	double MONTH_IRREG_bnds(MONTH_IRREG, bnds) ;
	double V(MONTH_IRREG) ;
		V:missing_value = -1.e+34 ;
		V:_FillValue = -1.e+34 ;
		V:long_name = "T[GT=MONTH_IRREG]" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 MONTH_IRREG = 15.5, 45.12125, 74.7425, 105.2425, 135.7425, 166.2425, 
    196.7425, 227.7425, 258.2425, 288.7425, 319.2425, 349.7425 ;

 MONTH_IRREG_bnds =
  0, 31,
  31, 59.2425,
  59.2425, 90.2425,
  90.2425, 120.2425,
  120.2425, 151.2425,
  151.2425, 181.2425,
  181.2425, 212.2425,
  212.2425, 243.2425,
  243.2425, 273.2425,
  273.2425, 304.2425,
  304.2425, 334.2425,
  334.2425, 365.2425 ;

 V = 15.5, 45.12125, 74.7425, 105.2425, 135.7425, 166.2425, 196.7425, 
    227.7425, 258.2425, 288.7425, 319.2425, 349.7425 ;
}
bn_bounds.jnl --- 2 long irreg axes.
netcdf a {
dimensions:
	COADSX90_90 = 1 ;
	COADSY66_66 = 1 ;
	TCOADS = UNLIMITED ; // (5 currently)
	bnds = 2 ;
variables:
	double COADSX90_90(COADSX90_90) ;
		COADSX90_90:units = "degrees_east" ;
		COADSX90_90:modulo = " " ;
		COADSX90_90:point_spacing = "even" ;
		COADSX90_90:axis = "X" ;
		COADSX90_90:standard_name = "longitude" ;
	double COADSY66_66(COADSY66_66) ;
		COADSY66_66:units = "degrees_north" ;
		COADSY66_66:point_spacing = "even" ;
		COADSY66_66:axis = "Y" ;
		COADSY66_66:standard_name = "latitude" ;
	double TCOADS(TCOADS) ;
		TCOADS:units = "days since 1700-01-01 00:00:00" ;
		TCOADS:time_origin = "01-JAN-1700 00:00:00" ;
		TCOADS:axis = "T" ;
		TCOADS:standard_name = "time" ;
		TCOADS:bounds = "TCOADS_bnds" ;
	double TCOADS_bnds(TCOADS, bnds) ;
	double V(TCOADS, COADSY66_66, COADSX90_90) ;
		V:missing_value = -1.e+34 ;
		V:_FillValue = -1.e+34 ;
		V:long_name = "MISSING(VWND,28.5)" ;
		V:history = "From coads_vwnd" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 COADSX90_90 = 199 ;

 COADSY66_66 = 41 ;

 TCOADS = 91050, 91080.5, 91111, 91141.5, 91172.5 ;

 TCOADS_bnds =
  91035, 91065,
  91065, 91096,
  91096, 91126,
  91126, 91157,
  91157, 91188 ;

 V =
  4,
  1.94999992847443,
  4.25,
  1.6599999666214,
  -0.129999995231628 ;
}
bn_bounds.jnl --- 3 Append later time steps, adding a void point
netcdf a {
dimensions:
	COADSX90_90 = 1 ;
	COADSY66_66 = 1 ;
	TCOADS = UNLIMITED ; // (10 currently)
	bnds = 2 ;
variables:
	double COADSX90_90(COADSX90_90) ;
		COADSX90_90:units = "degrees_east" ;
		COADSX90_90:modulo = " " ;
		COADSX90_90:point_spacing = "even" ;
		COADSX90_90:axis = "X" ;
		COADSX90_90:standard_name = "longitude" ;
	double COADSY66_66(COADSY66_66) ;
		COADSY66_66:units = "degrees_north" ;
		COADSY66_66:point_spacing = "even" ;
		COADSY66_66:axis = "Y" ;
		COADSY66_66:standard_name = "latitude" ;
	double TCOADS(TCOADS) ;
		TCOADS:units = "days since 1700-01-01 00:00:00" ;
		TCOADS:time_origin = "01-JAN-1700 00:00:00" ;
		TCOADS:axis = "T" ;
		TCOADS:standard_name = "time" ;
		TCOADS:bounds = "TCOADS_bnds" ;
	double TCOADS_bnds(TCOADS, bnds) ;
	double V(TCOADS, COADSY66_66, COADSX90_90) ;
		V:missing_value = -1.e+34 ;
		V:_FillValue = -1.e+34 ;
		V:long_name = "MISSING(VWND,28.5)" ;
		V:history = "From coads_vwnd" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 COADSX90_90 = 199 ;

 COADSY66_66 = 41 ;

 TCOADS = 91050, 91080.5, 91111, 91141.5, 91172.5, 91264.5, 91355, 91384.5, 
    91415, 91445.5 ;

 TCOADS_bnds =
  91035, 91065,
  91065, 91096,
  91096, 91126,
  91126, 91157,
  91157, 91188,
  91188, 91341,
  91341, 91369,
  91369, 91400,
  91400, 91430,
  91430, 91461 ;

 V =
  4,
  1.94999992847443,
  4.25,
  1.6599999666214,
  -0.129999995231628,
  _,
  -1.0699999332428,
  3.35999989509583,
  -3.86999988555908,
  3.93999981880188 ;
}
bn_bounds.jnl --- 4 depth axis, bounds positive up
netcdf a {
dimensions:
	ZIRR = 4 ;
	bnds = 2 ;
variables:
	double ZIRR(ZIRR) ;
		ZIRR:units = "meters" ;
		ZIRR:point_spacing = "uneven" ;
		ZIRR:axis = "Z" ;
		ZIRR:bounds = "ZIRR_bnds" ;
		ZIRR:positive = "down" ;
		ZIRR:standard_name = "depth" ;
	double ZIRR_bnds(ZIRR, bnds) ;
	double T2(ZIRR) ;
		T2:missing_value = -1.e+34 ;
		T2:_FillValue = -1.e+34 ;
		T2:long_name = "Z[GZ=ZIRR]" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 ZIRR = 0, 10, 40, 70 ;

 ZIRR_bnds =
  -5, 5,
  5, 25,
  25, 55,
  55, 85 ;

 T2 = 0, 10, 40, 70 ;
}
bn_bounds.jnl --- 5 SAVE on irregular time axis, multi-dimensional save.
netcdf a {
dimensions:
	COADSX81_83 = 3 ;
	COADSY46_49 = 4 ;
	MONTH_IRREG = UNLIMITED ; // (8 currently)
	bnds = 2 ;
variables:
	double COADSX81_83(COADSX81_83) ;
		COADSX81_83:units = "degrees_east" ;
		COADSX81_83:modulo = " " ;
		COADSX81_83:point_spacing = "even" ;
		COADSX81_83:axis = "X" ;
		COADSX81_83:standard_name = "longitude" ;
	double COADSY46_49(COADSY46_49) ;
		COADSY46_49:units = "degrees_north" ;
		COADSY46_49:point_spacing = "even" ;
		COADSY46_49:axis = "Y" ;
		COADSY46_49:standard_name = "latitude" ;
	double MONTH_IRREG(MONTH_IRREG) ;
		MONTH_IRREG:units = "days since 0000-01-01 00:00:00" ;
		MONTH_IRREG:time_origin = "01-JAN-0000 00:00:00" ;
		MONTH_IRREG:modulo = " " ;
		MONTH_IRREG:axis = "T" ;
		MONTH_IRREG:standard_name = "time" ;
		MONTH_IRREG:bounds = "MONTH_IRREG_bnds" ;
	double MONTH_IRREG_bnds(MONTH_IRREG, bnds) ;
	double V(MONTH_IRREG, COADSY46_49, COADSX81_83) ;
		V:missing_value = -1.e+34 ;
		V:_FillValue = -1.e+34 ;
		V:long_name = "MISSING(SST[GT=MONTH_IRREG], 28)" ;
		V:history = "From coads_climatology" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 COADSX81_83 = 181, 183, 185 ;

 COADSY46_49 = 1, 3, 5, 7 ;

 MONTH_IRREG = 15.5, 45.12125, 74.7425, 105.2425, 135.7425, 181.7425, 
    227.7425, 258.2425 ;

 MONTH_IRREG_bnds =
  0, 31,
  31, 59.2425,
  59.2425, 90.2425,
  90.2425, 120.2425,
  120.2425, 151.2425,
  151.2425, 212.2425,
  212.2425, 243.2425,
  243.2425, 273.2425 ;

 V =
  28.2849935840911, 28.414627680037, 27.9161884993111,
  27.9765395405733, 28.2538326818959, 28.2807402581306,
  28.2439206183922, 28.0639671835704, 28.4098884258851,
  27.8988069263938, 28.1024085497053, 27.7289905177585,
  28.4160049287061, 28.4018177891461, 28.0223225569069,
  28.3564239921735, 28.4116722185187, 27.9981931574269,
  27.9975107377818, 28.1639069786096, 28.1146483772156,
  27.9665335861598, 27.7497643747061, 27.8315865878107,
  28.0636671118728, 27.5906545051978, 27.7380534023442,
  27.9418187705116, 28.0035441744124, 27.7237886368008,
  27.8988417091574, 27.8729683348804, 27.9324667419545,
  27.8429933705147, 27.8182966108574, 27.9089173534895,
  28, 28, 28,
  28, 28, 28,
  28, 28, 28,
  28, 28, 28,
  28, 28, 28,
  28, 28, 28,
  28, 28, 28,
  28, 28, 28,
  _, _, _,
  _, _, _,
  _, _, _,
  _, _, _,
  28, 28, 28,
  28, 28, 28,
  28, 28, 28,
  28, 28, 28,
  28, 28, 28,
  28, 28, 28,
  28, 28, 28,
  28, 28, 28 ;
}
bn_bounds.jnl --- 6 SAVE on regular time axis with bounds attribute
netcdf a {
dimensions:
	COADSX81_81 = 1 ;
	bnds = 2 ;
	COADSY46_46 = 1 ;
	TIME = UNLIMITED ; // (3 currently)
variables:
	double COADSX81_81(COADSX81_81) ;
		COADSX81_81:units = "degrees_east" ;
		COADSX81_81:modulo = " " ;
		COADSX81_81:point_spacing = "even" ;
		COADSX81_81:axis = "X" ;
		COADSX81_81:standard_name = "longitude" ;
		COADSX81_81:bounds = "COADSX81_81_bnds" ;
	double COADSX81_81_bnds(COADSX81_81, bnds) ;
	double COADSY46_46(COADSY46_46) ;
		COADSY46_46:units = "degrees_north" ;
		COADSY46_46:point_spacing = "even" ;
		COADSY46_46:axis = "Y" ;
		COADSY46_46:standard_name = "latitude" ;
		COADSY46_46:bounds = "COADSY46_46_bnds" ;
	double COADSY46_46_bnds(COADSY46_46, bnds) ;
	double TIME(TIME) ;
		TIME:units = "hour since 0000-01-01 00:00:00" ;
		TIME:time_origin = "01-JAN-0000 00:00:00" ;
		TIME:modulo = " " ;
		TIME:axis = "T" ;
		TIME:standard_name = "time" ;
		TIME:bounds = "TIME_bnds" ;
	double TIME_bnds(TIME, bnds) ;
	float SST(TIME, COADSY46_46, COADSX81_81) ;
		SST:missing_value = -1.e+34f ;
		SST:_FillValue = -1.e+34f ;
		SST:long_name = "SEA SURFACE TEMPERATURE" ;
		SST:history = "From coads_climatology" ;
		SST:units = "Deg C" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 COADSX81_81 = 181 ;

 COADSX81_81_bnds =
  180, 182 ;

 COADSY46_46 = 1 ;

 COADSY46_46_bnds =
  0, 2 ;

 TIME = 366, 1096.485, 1826.97 ;

 TIME_bnds =
  0.757499999999993, 731.2425,
  731.2425, 1461.7275,
  1461.7275, 2192.2125 ;

 SST =
  28.28389,
  28.41851,
  28.0468 ;
}
bn_bounds.jnl --- 7 SAVE on regular time axis with edges attributes
netcdf a {
dimensions:
	COADSX81_81 = 1 ;
	COADSX81_81edges = 2 ;
	COADSY46_46 = 1 ;
	COADSY46_46edges = 2 ;
	TIME = UNLIMITED ; // (3 currently)
	TIMEedges = 4 ;
variables:
	double COADSX81_81(COADSX81_81) ;
		COADSX81_81:units = "degrees_east" ;
		COADSX81_81:modulo = " " ;
		COADSX81_81:point_spacing = "even" ;
		COADSX81_81:axis = "X" ;
		COADSX81_81:standard_name = "longitude" ;
		COADSX81_81:edges = "COADSX81_81edges" ;
	double COADSX81_81edges(COADSX81_81edges) ;
		COADSX81_81edges:edges = " " ;
	double COADSY46_46(COADSY46_46) ;
		COADSY46_46:units = "degrees_north" ;
		COADSY46_46:point_spacing = "even" ;
		COADSY46_46:axis = "Y" ;
		COADSY46_46:standard_name = "latitude" ;
		COADSY46_46:edges = "COADSY46_46edges" ;
	double COADSY46_46edges(COADSY46_46edges) ;
		COADSY46_46edges:edges = " " ;
	double TIME(TIME) ;
		TIME:units = "hour since 0000-01-01 00:00:00" ;
		TIME:time_origin = "01-JAN-0000 00:00:00" ;
		TIME:modulo = " " ;
		TIME:axis = "T" ;
		TIME:standard_name = "time" ;
		TIME:edges = "TIMEedges" ;
	double TIMEedges(TIMEedges) ;
		TIMEedges:edges = " " ;
	float SST(TIME, COADSY46_46, COADSX81_81) ;
		SST:missing_value = -1.e+34f ;
		SST:_FillValue = -1.e+34f ;
		SST:long_name = "SEA SURFACE TEMPERATURE" ;
		SST:history = "From coads_climatology" ;
		SST:units = "Deg C" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 COADSX81_81 = 181 ;

 COADSX81_81edges = 180, 182 ;

 COADSY46_46 = 1 ;

 COADSY46_46edges = 0, 2 ;

 TIME = 366, 1096.485, 1826.97 ;

 TIMEedges = 0.757499999999993, 731.2425, 1461.7275, 2192.2125 ;

 SST =
  28.28389,
  28.41851,
  28.0468 ;
}
bn_bounds.jnl --- 8 outputting bounds on all irregular axes, depth axis
netcdf irrxzt {
dimensions:
	XAX = 6 ;
	bnds = 2 ;
	ZAX = 5 ;
	TAX = UNLIMITED ; // (5 currently)
variables:
	double XAX(XAX) ;
		XAX:point_spacing = "uneven" ;
		XAX:axis = "X" ;
		XAX:bounds = "XAX_bnds" ;
	double XAX_bnds(XAX, bnds) ;
	double ZAX(ZAX) ;
		ZAX:point_spacing = "uneven" ;
		ZAX:axis = "Z" ;
		ZAX:bounds = "ZAX_bnds" ;
		ZAX:positive = "down" ;
		ZAX:standard_name = "depth" ;
	double ZAX_bnds(ZAX, bnds) ;
	double TAX(TAX) ;
		TAX:axis = "T" ;
		TAX:bounds = "TAX_bnds" ;
	double TAX_bnds(TAX, bnds) ;
	double V(TAX, ZAX, XAX) ;
		V:missing_value = -1.e+34 ;
		V:_FillValue = -1.e+34 ;
		V:long_name = "X[GX=XAX] +Z[GZ=ZAX] + T[GT=TAX]" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 XAX = 1, 2, 5, 6, 7, 8 ;

 XAX_bnds =
  0.5, 1.5,
  1.5, 3.5,
  3.5, 5.5,
  5.5, 6.5,
  6.5, 7.5,
  7.5, 8.5 ;

 ZAX = 0, 20, 50, 75, 120 ;

 ZAX_bnds =
  0, 10,
  10, 30,
  30, 60,
  60, 90,
  90, 150 ;

 TAX = 1, 2, 9, 10, 11 ;

 TAX_bnds =
  0.5, 1.5,
  1.5, 5.5,
  5.5, 9.5,
  9.5, 10.5,
  10.5, 11.5 ;

 V =
  2, 3, 6, 7, 8, 9,
  22, 23, 26, 27, 28, 29,
  52, 53, 56, 57, 58, 59,
  77, 78, 81, 82, 83, 84,
  122, 123, 126, 127, 128, 129,
  3, 4, 7, 8, 9, 10,
  23, 24, 27, 28, 29, 30,
  53, 54, 57, 58, 59, 60,
  78, 79, 82, 83, 84, 85,
  123, 124, 127, 128, 129, 130,
  10, 11, 14, 15, 16, 17,
  30, 31, 34, 35, 36, 37,
  60, 61, 64, 65, 66, 67,
  85, 86, 89, 90, 91, 92,
  130, 131, 134, 135, 136, 137,
  11, 12, 15, 16, 17, 18,
  31, 32, 35, 36, 37, 38,
  61, 62, 65, 66, 67, 68,
  86, 87, 90, 91, 92, 93,
  131, 132, 135, 136, 137, 138,
  12, 13, 16, 17, 18, 19,
  32, 33, 36, 37, 38, 39,
  62, 63, 66, 67, 68, 69,
  87, 88, 91, 92, 93, 94,
  132, 133, 136, 137, 138, 139 ;
}
*** Running test: bn_all_leap.jnl
*** Running test: bn570_bug_fixes.jnl
*** Running test: bn_modstats.jnl
*** Running test: bn_mc_vary_scale.jnl
*** Running test: bn_plot_nokey.jnl
*** Running test: bn580_bug_fixes.jnl
*** Running test: bn_inf_levels.jnl
*** Running test: bn_regulart.jnl
*** Running test: bn_labwid.jnl
*** Running test: bn_redefine_taxis_mc.jnl
*** Running test: bn_illegal_axisname.jnl
*** Running test: bn_exit_script.jnl
*** Running test: bn_exit_cycle.jnl
*** Running test: bn_curv_mod.jnl
*** Running test: bn_shade_keycont.jnl
*** Running test: bn581_bug_fixes.jnl
err580_irreg_bounds.jnl --- 
netcdf a {
dimensions:
	TIME = UNLIMITED ; // (2 currently)
	bnds = 2 ;
variables:
	double TIME(TIME) ;
		TIME:axis = "T" ;
		TIME:bounds = "TIME_bnds" ;
	double TIME_bnds(TIME, bnds) ;
	double A(TIME) ;
		A:missing_value = -1.e+34 ;
		A:_FillValue = -1.e+34 ;
		A:long_name = "T[GT=TIME]" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 TIME = 0.5, 2 ;

 TIME_bnds =
  0, 1,
  1, 3 ;

 A = 0.5, 2 ;
}
err580_long_title.jnl --- 
netcdf longtitle {
dimensions:
	XAX1_10 = 10 ;
variables:
	double XAX1_10(XAX1_10) ;
		XAX1_10:point_spacing = "even" ;
		XAX1_10:axis = "X" ;
	float X_(XAX1_10) ;
		X_:long_name = "X" ;
		X_:long_name_mod = "axis ABSTRACT" ;
		X_:missing_value = -1.308568e+26f ;
		X_:_FillValue = -1.308568e+26f ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
		:title = "a long title longer than 80 characters a123456789b123456789c123456789d123456789e123456789f123456789g123456789h123456789" ;
data:

 XAX1_10 = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ;

 X_ = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ;
}
err580_long_dsettitle.jnl --- 
netcdf longtitle {
dimensions:
	XAX1_5 = 5 ;
variables:
	double XAX1_5(XAX1_5) ;
		XAX1_5:point_spacing = "even" ;
		XAX1_5:axis = "X" ;
	float A(XAX1_5) ;
		A:missing_value = -1.e+34f ;
		A:_FillValue = -1.e+34f ;
		A:long_name = "A" ;
		A:history = "From x" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
		:title = "a long title, longer than the previous limit of 80 characters.  Previously various buffers were set to 80, and storage in ds_title was also too short." ;
data:

 XAX1_5 = 1, 2, 3, 4, 5 ;

 A = 1, 2, 3, 4, 5 ;
}
err580_cdc_timeaxis.jnl --- 
netcdf my_cdc_timeaxis {
dimensions:
	TCDC = UNLIMITED ; // (15 currently)
variables:
	double TCDC(TCDC) ;
		TCDC:units = "days since 0001-01-01 00:00:00" ;
		TCDC:axis = "T" ;
		TCDC:calendar = "GREGORIAN" ;
		TCDC:time_origin = "01-JAN-0001 00:00:00" ;
		TCDC:standard_name = "time" ;
	double A(TCDC) ;
		A:missing_value = -1.e+34 ;
		A:_FillValue = -1.e+34 ;
		A:long_name = "SIN(T[GT=TCDC]/10000)" ;
		A:history = "From t0_cdc" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
}
*** Running test: bn_tab_comma_multivar.jnl
*** Running test: bn_element_functions.jnl
*** Running test: bn_long_revision_num.jnl
bn_long_revision_num.jnl --- history attribute
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
*** Running test: bn_window_title.jnl
*** Running test: bn_last_error.jnl
*** Running test: bn_deg_min.jnl
*** Running test: bn_dp_readscale.jnl
*** Running test: bn_bounds_defineax.jnl
bn_bounds_defineax.jnl --- N+1 def of bounds.
netcdf irrxzt {
dimensions:
	XAX = 6 ;
	bnds = 2 ;
	ZAX = 5 ;
	TAX = UNLIMITED ; // (5 currently)
variables:
	double XAX(XAX) ;
		XAX:point_spacing = "uneven" ;
		XAX:axis = "X" ;
		XAX:bounds = "XAX_bnds" ;
	double XAX_bnds(XAX, bnds) ;
	double ZAX(ZAX) ;
		ZAX:point_spacing = "uneven" ;
		ZAX:axis = "Z" ;
		ZAX:bounds = "ZAX_bnds" ;
		ZAX:positive = "down" ;
		ZAX:standard_name = "depth" ;
	double ZAX_bnds(ZAX, bnds) ;
	double TAX(TAX) ;
		TAX:axis = "T" ;
		TAX:bounds = "TAX_bnds" ;
	double TAX_bnds(TAX, bnds) ;
	double V(TAX, ZAX, XAX) ;
		V:missing_value = -1.e+34 ;
		V:_FillValue = -1.e+34 ;
		V:long_name = "X[GX=XAX] +Z[GZ=ZAX] + T[GT=TAX]" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 XAX = 1, 2, 5, 6, 7, 8 ;

 XAX_bnds =
  0.5, 1.5,
  1.5, 3.5,
  3.5, 5.5,
  5.5, 6.5,
  6.5, 7.5,
  7.5, 8.5 ;

 ZAX = 0, 20, 50, 75, 120 ;

 ZAX_bnds =
  0, 10,
  10, 30,
  30, 60,
  60, 90,
  90, 150 ;

 TAX = 1, 2, 9, 10, 11 ;

 TAX_bnds =
  0.5, 1.5,
  1.5, 5.5,
  5.5, 9.5,
  9.5, 10.5,
  10.5, 11.5 ;

 V =
  2, 3, 6, 7, 8, 9,
  22, 23, 26, 27, 28, 29,
  52, 53, 56, 57, 58, 59,
  77, 78, 81, 82, 83, 84,
  122, 123, 126, 127, 128, 129,
  3, 4, 7, 8, 9, 10,
  23, 24, 27, 28, 29, 30,
  53, 54, 57, 58, 59, 60,
  78, 79, 82, 83, 84, 85,
  123, 124, 127, 128, 129, 130,
  10, 11, 14, 15, 16, 17,
  30, 31, 34, 35, 36, 37,
  60, 61, 64, 65, 66, 67,
  85, 86, 89, 90, 91, 92,
  130, 131, 134, 135, 136, 137,
  11, 12, 15, 16, 17, 18,
  31, 32, 35, 36, 37, 38,
  61, 62, 65, 66, 67, 68,
  86, 87, 90, 91, 92, 93,
  131, 132, 135, 136, 137, 138,
  12, 13, 16, 17, 18, 19,
  32, 33, 36, 37, 38, 39,
  62, 63, 66, 67, 68, 69,
  87, 88, 91, 92, 93, 94,
  132, 133, 136, 137, 138, 139 ;
}
*** Running test: bn600_bug_fixes.jnl
*** Running test: bn601_bug_fixes.jnl
*** Running test: bn_set_strides.jnl
*** Running test: bn_lsl_lowpass.jnl
*** Running test: bn_return_xmod_tmod.jnl
*** Running test: bn602_bug_fixes.jnl
*** Running test: bn_modnbd.jnl
*** Running test: bn_fifty_files.jnl
*** Running test: bn603_bug_fixes.jnl
*** Running test: bn_set_var_name.jnl
*** Running test: bn_memory_symbol.jnl
*** Running test: bn605_bug_fixes.jnl
*** Running test: bn608_bug_fixes.jnl
*** Running test: bn_shade_trim.jnl
*** Running test: bn_mode_nlevels.jnl
*** Running test: bn61_bug_fixes.jnl
*** Running test: bn_test_opendap.jnl
*** Running test: bn611_bug_fixes.jnl
netcdf a {
dimensions:
	XAX = 4 ;
	bnds = 2 ;
variables:
	double XAX(XAX) ;
		XAX:point_spacing = "uneven" ;
		XAX:axis = "X" ;
		XAX:bounds = "XAX_bnds" ;
	double XAX_bnds(XAX, bnds) ;
	double A(XAX) ;
		A:missing_value = -1.e+34 ;
		A:_FillValue = -1.e+34 ;
		A:long_name = "X[GX=XAX]" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 XAX = 1.5, 3, 6, 8.5 ;

 XAX_bnds =
  1, 2,
  2, 4,
  4, 8,
  8, 9 ;

 A = 1.5, 3, 6, 8.5 ;
}
netcdf a {
dimensions:
	XAX = 4 ;
	bnds = 2 ;
variables:
	double XAX(XAX) ;
		XAX:point_spacing = "uneven" ;
		XAX:axis = "X" ;
		XAX:bounds = "XAX_bnds" ;
	double XAX_bnds(XAX, bnds) ;
	double A(XAX) ;
		A:missing_value = -1.e+34 ;
		A:_FillValue = -1.e+34 ;
		A:long_name = "X[GX=XAX]" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 XAX = 1.5, 3, 6, 8.5 ;

 XAX_bnds =
  1, 2,
  2, 4,
  4, 8,
  8, 9 ;

 A = 1.5, 3, 6, 8.5 ;
}
netcdf a {
dimensions:
	XAX = 4 ;
	bnds = 2 ;
variables:
	double XAX(XAX) ;
		XAX:point_spacing = "uneven" ;
		XAX:axis = "X" ;
		XAX:bounds = "XAX_bnds" ;
	double XAX_bnds(XAX, bnds) ;
	double A(XAX) ;
		A:missing_value = -1.e+34 ;
		A:_FillValue = -1.e+34 ;
		A:long_name = "X[GX=XAX]" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 XAX = 1.5, 3, 6, 8.5 ;

 XAX_bnds =
  1, 2,
  2, 4,
  4, 8,
  8, 9 ;

 A = 1.5, 3, 6, 8.5 ;
}
netcdf a {
dimensions:
	XAX_LEV9421_380 = 360 ;
	YAX_LEV9450_50 = 1 ;
	ZAXLEVIT191_1 = 1 ;
	TIME = UNLIMITED ; // (1 currently)
variables:
	double XAX_LEV9421_380(XAX_LEV9421_380) ;
		XAX_LEV9421_380:units = "degrees_east" ;
		XAX_LEV9421_380:modulo = " " ;
		XAX_LEV9421_380:point_spacing = "even" ;
		XAX_LEV9421_380:long_name = "Here is a long name for the x axis of TEMP" ;
		XAX_LEV9421_380:axis = "X" ;
		XAX_LEV9421_380:standard_name = "longitude" ;
	double YAX_LEV9450_50(YAX_LEV9450_50) ;
		YAX_LEV9450_50:units = "degrees_north" ;
		YAX_LEV9450_50:point_spacing = "even" ;
		YAX_LEV9450_50:axis = "Y" ;
		YAX_LEV9450_50:standard_name = "latitude" ;
	double ZAXLEVIT191_1(ZAXLEVIT191_1) ;
		ZAXLEVIT191_1:units = "meters" ;
		ZAXLEVIT191_1:positive = "down" ;
		ZAXLEVIT191_1:point_spacing = "even" ;
		ZAXLEVIT191_1:axis = "Z" ;
		ZAXLEVIT191_1:standard_name = "depth" ;
	double TIME(TIME) ;
		TIME:units = "hour since 0000-01-01 00:00:00" ;
		TIME:time_origin = "01-JAN-0000 00:00:00" ;
		TIME:modulo = " " ;
		TIME:axis = "T" ;
		TIME:standard_name = "time" ;
	float TEMP(TIME, ZAXLEVIT191_1, YAX_LEV9450_50, XAX_LEV9421_380) ;
		TEMP:missing_value = -1.e+34f ;
		TEMP:_FillValue = -1.e+34f ;
		TEMP:long_name = "Temperature" ;
		TEMP:history = "From ocean_atlas_monthly" ;
		TEMP:units = "Deg C" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
}
netcdf a {
dimensions:
	XAX_LEV9421_3801_12 = 12 ;
	YAX_LEV9450_50 = 1 ;
	ZAXLEVIT191_1 = 1 ;
	TIME = UNLIMITED ; // (1 currently)
variables:
	double XAX_LEV9421_3801_12(XAX_LEV9421_3801_12) ;
		XAX_LEV9421_3801_12:units = "degrees_east" ;
		XAX_LEV9421_3801_12:modulo = " " ;
		XAX_LEV9421_3801_12:point_spacing = "even" ;
		XAX_LEV9421_3801_12:long_name = "Here is a long name for the x axis of TEMP" ;
		XAX_LEV9421_3801_12:axis = "X" ;
		XAX_LEV9421_3801_12:standard_name = "longitude" ;
	double YAX_LEV9450_50(YAX_LEV9450_50) ;
		YAX_LEV9450_50:units = "degrees_north" ;
		YAX_LEV9450_50:point_spacing = "even" ;
		YAX_LEV9450_50:axis = "Y" ;
		YAX_LEV9450_50:standard_name = "latitude" ;
	double ZAXLEVIT191_1(ZAXLEVIT191_1) ;
		ZAXLEVIT191_1:units = "meters" ;
		ZAXLEVIT191_1:positive = "down" ;
		ZAXLEVIT191_1:point_spacing = "even" ;
		ZAXLEVIT191_1:axis = "Z" ;
		ZAXLEVIT191_1:standard_name = "depth" ;
	double TIME(TIME) ;
		TIME:units = "hour since 0000-01-01 00:00:00" ;
		TIME:time_origin = "01-JAN-0000 00:00:00" ;
		TIME:modulo = " " ;
		TIME:axis = "T" ;
		TIME:standard_name = "time" ;
	float TEMP(TIME, ZAXLEVIT191_1, YAX_LEV9450_50, XAX_LEV9421_3801_12) ;
		TEMP:missing_value = -1.e+34f ;
		TEMP:_FillValue = -1.e+34f ;
		TEMP:long_name = "Temperature" ;
		TEMP:history = "From ocean_atlas_monthly" ;
		TEMP:units = "Deg C" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
}
netcdf a {
dimensions:
	YAXIS = 61 ;
variables:
	double YAXIS(YAXIS) ;
		YAXIS:units = "degrees_north" ;
		YAXIS:point_spacing = "even" ;
		YAXIS:axis = "Y" ;
		YAXIS:standard_name = "latitude" ;
	double V(YAXIS) ;
		V:missing_value = -1.e+34 ;
		V:_FillValue = -1.e+34 ;
		V:long_name = "Y[GY=YAXIS]" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
}
*** Running test: bn_no_valid_on_plot.jnl
*** Running test: bn_median.jnl
*** Running test: bn614_bug_fixes.jnl
err611_set_var_ez.jnl --- 
netcdf a {
dimensions:
	XAX1_3 = 3 ;
variables:
	double XAX1_3(XAX1_3) ;
		XAX1_3:point_spacing = "even" ;
		XAX1_3:axis = "X" ;
	float MY_ASC(XAX1_3) ;
		MY_ASC:missing_value = 3.f ;
		MY_ASC:_FillValue = 3.f ;
		MY_ASC:long_name = "chlorophyll" ;
		MY_ASC:units = "micrograms/L" ;
		MY_ASC:history = "From dat.dat" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
}
netcdf a {
dimensions:
	XAX1_3 = 3 ;
variables:
	double XAX1_3(XAX1_3) ;
		XAX1_3:point_spacing = "even" ;
		XAX1_3:axis = "X" ;
	float MY_UNF(XAX1_3) ;
		MY_UNF:missing_value = 5.f ;
		MY_UNF:_FillValue = 5.f ;
		MY_UNF:long_name = "Some Unformatted input" ;
		MY_UNF:units = "metres" ;
		MY_UNF:history = "From unf.dat" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
}
bn_attributes.jnl --- SET VAR/OUTTYPE for user variable
netcdf a {
dimensions:
	XAX1_3 = 3 ;
variables:
	double XAX1_3(XAX1_3) ;
		XAX1_3:point_spacing = "even" ;
		XAX1_3:axis = "X" ;
	double A(XAX1_3) ;
		A:missing_value = -1.e+34 ;
		A:_FillValue = -1.e+34 ;
		A:long_name = "{1.1,2.2,3.3}" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 XAX1_3 = 1, 2, 3 ;

 A = 1.1, 2.2, 3.3 ;
}
netcdf a {
dimensions:
	XAX1_12 = 12 ;
variables:
	double XAX1_12(XAX1_12) ;
		XAX1_12:point_spacing = "even" ;
		XAX1_12:axis = "X" ;
	int A(XAX1_12) ;
		A:missing_value = 999 ;
		A:_FillValue = 999 ;
		A:long_name = "{ 3.77, 4.00, 4.10, 4.33, 4.38, 4.27, 4.31, 4.40, 4.75, 5.01, 5.27, 5.52}" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
data:

 XAX1_12 = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ;

 A = 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5 ;
}
*** Running test: bn_mode_nodata_lab.jnl
*** Running test: bn_proleptic_gregorian_calendar.jnl
*** Running test: bn_string_ngd_nbd.jnl
*** Running test: bn_cat_string.jnl
*** Running test: bn_sort_strings.jnl
*** Running test: bn_samplexyt.jnl
*** Running test: bn_last_go_file.jnl
*** Running test: bn_cancel_upcase_uservar.jnl
netcdf a {
dimensions:
	XAX1_10 = 10 ;
	tday = UNLIMITED ; // (31 currently)
	lon1_5 = 5 ;
	lat1_5 = 5 ;
	bnds = 2 ;
	zt = 10 ;
	time1478 = 3 ;
variables:
	double XAX1_10(XAX1_10) ;
		XAX1_10:point_spacing = "even" ;
		XAX1_10:axis = "X" ;
	double tday(tday) ;
		tday:units = "days since 1998-12-31 00:00:00" ;
		tday:axis = "T" ;
		tday:calendar = "GREGORIAN" ;
		tday:time_origin = "31-DEC-1998" ;
		tday:standard_name = "time" ;
	double MyUpperLowerCaseVar(tday, XAX1_10) ;
		MyUpperLowerCaseVar:missing_value = -1.e+34 ;
		MyUpperLowerCaseVar:_FillValue = -1.e+34 ;
		MyUpperLowerCaseVar:long_name = "X[X=1:10] + T[GT=TDAY]" ;
	double lon1_5(lon1_5) ;
		lon1_5:point_spacing = "even" ;
		lon1_5:axis = "X" ;
	double lat1_5(lat1_5) ;
		lat1_5:point_spacing = "uneven" ;
		lat1_5:axis = "Y" ;
		lat1_5:bounds = "lat1_5_bnds" ;
	double lat1_5_bnds(lat1_5, bnds) ;
	float zt(zt) ;
		zt:units = "meters" ;
		zt:positive = "down" ;
		zt:point_spacing = "uneven" ;
		zt:axis = "Z" ;
		zt:standard_name = "depth" ;
		zt:bounds = "zt_bnds" ;
	float zt_bnds(zt, bnds) ;
	double time1478(time1478) ;
		time1478:calendar = "NOLEAP" ;
		time1478:point_spacing = "even" ;
		time1478:axis = "T" ;
		time1478:standard_name = "time" ;
	double newvar(time1478, zt, lat1_5, lon1_5) ;
		newvar:missing_value = -999. ;
		newvar:_FillValue = -999. ;
		newvar:long_name = "outgoing longwave radiation" ;
		newvar:units = "watts/m2" ;
		newvar:history = "From a" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
}
*** Running test: bn_cdf_keepax.jnl
*** Running test: bn_keep_axisnames.jnl
bn_keep_axisnames.jnl --- test SAVE/KEEP_AXISNAMES
netcdf a {
dimensions:
	X100 = 11 ;
	T31 = UNLIMITED ; // (14 currently)
variables:
	double X100(X100) ;
		X100:units = "degrees_east" ;
		X100:point_spacing = "even" ;
		X100:axis = "X" ;
		X100:modulo = 360. ;
		X100:standard_name = "longitude" ;
	double T31(T31) ;
		T31:units = "days since 1999-12-31 00:00:00" ;
		T31:axis = "T" ;
		T31:calendar = "GREGORIAN" ;
		T31:time_origin = "31-DEC-1999" ;
		T31:standard_name = "time" ;
	double A(T31, X100) ;
		A:missing_value = -1.e+34 ;
		A:_FillValue = -1.e+34 ;
		A:long_name = "X[GX=X100] + T[GT=T31]" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
}
bn_keep_axisnames.jnl --- without /KEEP_AXISNAMES
netcdf a {
dimensions:
	X10030_40 = 11 ;
	T31 = UNLIMITED ; // (14 currently)
variables:
	double X10030_40(X10030_40) ;
		X10030_40:units = "degrees_east" ;
		X10030_40:point_spacing = "even" ;
		X10030_40:axis = "X" ;
		X10030_40:modulo = 360. ;
		X10030_40:standard_name = "longitude" ;
	double T31(T31) ;
		T31:units = "days since 1999-12-31 00:00:00" ;
		T31:axis = "T" ;
		T31:calendar = "GREGORIAN" ;
		T31:time_origin = "31-DEC-1999" ;
		T31:standard_name = "time" ;
	double A(T31, X10030_40) ;
		A:missing_value = -1.e+34 ;
		A:_FillValue = -1.e+34 ;
		A:long_name = "X[GX=X100] + T[GT=T31]" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
}
*** Running test: bn_key_label_minmax.jnl
*** Running test: bn62_bug_fixes.jnl
*** Running test: bn_convolve.jnl
*** Running test: bn_tax_tstep.jnl
*** Running test: bn_grads_z.jnl
*** Running test: bn_clock_syms.jnl
*** Running test: bn63_bug_fixes.jnl
*** Running test: bn_axis_reversed_syms.jnl
*** Running test: bn_isdepth.jnl
*** Running test: bn_var_hist_levels.jnl
*** Running test: bn64_bug_fixes.jnl
*** Running test: bn_long_grid_names.jnl
*** Running test: bn_xml_repl.jnl
*** Running test: bn65_bug_fixes.jnl
*** Running test: bn_txtype_dmy.jnl
*** Running test: bn_n_open_dsets_sym.jnl
*** Running test: bn_multi_decade.jnl
*** Running test: bn_show_xml_file.jnl
*** Running test: bn66_bug_fixes.jnl
*** Running test: bn_netcdf4.jnl
*** Running test: bn_scat2grid_bin.jnl
*** Running test: bn_axis_dir_symbols.jnl
*** Running test: bn663_bug_fixes.jnl
*** Running test: bn_set_axis_regular.jnl
*** Running test: bn_set_cancel_redirect.jnl
*** Running test: bn_min_max_smoothers.jnl
*** Running test: bn_vector_symbols.jnl
*** Running test: bn_variance_large.jnl
*** Running test: bn_labnum_calendar.jnl
*** Running test: bn665_bug_fixes.jnl
*** Running test: bn_floatstr.jnl
*** Running test: bn67_bug_fixes.jnl
*** Running test: bn_NaN_note.jnl
*** Running test: bn671_bug_fixes.jnl
*** Running test: bn68_bug_fixes.jnl
*** Running test: bn_ifv.jnl
*** Running test: bn_randu2_randn2.jnl
*** Running test: bn_axis_cf.jnl
bn_axis_cf.jnl, degrees_east, degrees_north, std names on axes:
netcdf a {
dimensions:
	XAX = 11 ;
	YAX = 6 ;
	TAXIS = UNLIMITED ; // (5 currently)
	ZAXDN = 4 ;
	bnds = 2 ;
	ZAXUP = 5 ;
variables:
	double XAX(XAX) ;
		XAX:units = "degrees_east" ;
		XAX:point_spacing = "even" ;
		XAX:axis = "X" ;
		XAX:modulo = 360. ;
		XAX:standard_name = "longitude" ;
	double XX(XAX) ;
		XX:missing_value = -1.e+34 ;
		XX:_FillValue = -1.e+34 ;
		XX:long_name = "X[GX=XAX]" ;
	double YAX(YAX) ;
		YAX:units = "degrees_north" ;
		YAX:point_spacing = "even" ;
		YAX:axis = "Y" ;
		YAX:standard_name = "latitude" ;
	double YY(YAX) ;
		YY:missing_value = -1.e+34 ;
		YY:_FillValue = -1.e+34 ;
		YY:long_name = "Y[GY=YAX]" ;
	double TAXIS(TAXIS) ;
		TAXIS:units = "days since 2000-01-01 00:00:00" ;
		TAXIS:axis = "T" ;
		TAXIS:calendar = "GREGORIAN" ;
		TAXIS:time_origin = "1-JAN-2000" ;
		TAXIS:standard_name = "time" ;
	double TT(TAXIS) ;
		TT:missing_value = -1.e+34 ;
		TT:_FillValue = -1.e+34 ;
		TT:long_name = "T[GT=TAXIS]" ;
	double ZAXDN(ZAXDN) ;
		ZAXDN:units = "meters" ;
		ZAXDN:point_spacing = "uneven" ;
		ZAXDN:axis = "Z" ;
		ZAXDN:bounds = "ZAXDN_bnds" ;
		ZAXDN:positive = "down" ;
		ZAXDN:standard_name = "depth" ;
	double ZAXDN_bnds(ZAXDN, bnds) ;
	double ZDN(ZAXDN) ;
		ZDN:missing_value = -1.e+34 ;
		ZDN:_FillValue = -1.e+34 ;
		ZDN:long_name = "Z[GZ=ZAXDN]" ;
	double ZAXUP(ZAXUP) ;
		ZAXUP:units = "meters" ;
		ZAXUP:point_spacing = "uneven" ;
		ZAXUP:axis = "Z" ;
		ZAXUP:bounds = "ZAXUP_bnds" ;
		ZAXUP:standard_name = "altitude" ;
	double ZAXUP_bnds(ZAXUP, bnds) ;
	double ZUP(ZAXUP) ;
		ZUP:missing_value = -1.e+34 ;
		ZUP:_FillValue = -1.e+34 ;
		ZUP:long_name = "Z[GZ=ZAXUP]" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
}
bn_axis_cf.jnl, Convert forms of DEG, degrees to degrees_east:
netcdf a {
dimensions:
	XAXIS = 31 ;
	YFIFTEEN = 13 ;
variables:
	double XAXIS(XAXIS) ;
		XAXIS:units = "degrees_east" ;
		XAXIS:point_spacing = "even" ;
		XAXIS:axis = "X" ;
		XAXIS:modulo = 360. ;
		XAXIS:standard_name = "longitude" ;
	float VAR(XAXIS) ;
		VAR:missing_value = -1.e+34f ;
		VAR:_FillValue = -1.e+34f ;
		VAR:long_name = "X[GX=XAXIS]" ;
		VAR:history = "From degrees" ;
	double YFIFTEEN(YFIFTEEN) ;
		YFIFTEEN:units = "degrees_north" ;
		YFIFTEEN:point_spacing = "even" ;
		YFIFTEEN:axis = "Y" ;
		YFIFTEEN:standard_name = "latitude" ;
	float Y_(YFIFTEEN) ;
		Y_:long_name = "Y" ;
		Y_:long_name_mod = "axis YFIFTEEN" ;
		Y_:missing_value = -3.689349e+19f ;
		Y_:_FillValue = -3.689349e+19f ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
}
bn_axis_cf.jnl, Downcase units, e.g. in time axis DAYS since
netcdf a {
dimensions:
	XLON = 40 ;
	YLAT = 30 ;
	TTIME = UNLIMITED ; // (20 currently)
variables:
	double XLON(XLON) ;
		XLON:units = "degrees_east" ;
		XLON:point_spacing = "even" ;
		XLON:modulo = 360. ;
		XLON:axis = "X" ;
		XLON:standard_name = "longitude" ;
	double YLAT(YLAT) ;
		YLAT:units = "degrees_north" ;
		YLAT:point_spacing = "even" ;
		YLAT:axis = "Y" ;
		YLAT:standard_name = "latitude" ;
	double TTIME(TTIME) ;
		TTIME:units = "days since 1901-01-15 00:00:00" ;
		TTIME:time_origin = "15-JAN-1901 00:00:00" ;
		TTIME:axis = "T" ;
		TTIME:standard_name = "time" ;
	float XYTVAR(TTIME, YLAT, XLON) ;
		XYTVAR:missing_value = -1.e+34f ;
		XYTVAR:_FillValue = -1.e+34f ;
		XYTVAR:long_name = "L*1000 + J*10 + I" ;
		XYTVAR:history = "From bn_strides" ;

// global attributes:
		:history = "FERRET V6.85 (PyFerret 1.0.0beta) 11-Mar-13" ;
		:Conventions = "CF-1.0" ;
}
*** Running test: bn_repeated_coords.jnl
*** Running test: bn_xml_header.jnl
*** Running test: bn_eof_simple.jnl
*** Running test: bn_eof_simple2.jnl
*** Running test: bn_interpolate_6d.jnl
*** Running test: bn_regrid_6d.jnl
*** Running test: bn_syntax_6d.jnl
*** Running test: bn_expressions_6d.jnl
*** Running test: bn_direction_fcns_6d.jnl
*** Running test: bn_regrid_transforms_6d.jnl
*** Running test: bn_aggregate_e.jnl
*** Running test: bn_6d_lab_mode.jnl
*** Running test: bn682_bug_fixes.jnl
*** Running test: bn683_bug_fixes.jnl
*** Running test: bn_outtype.jnl
*** Running test: bn_ribbon_plot.jnl
*** Running test: bn_descr_4digit.jnl
*** Running test: bn_axis_outtype.jnl
*** Running test: bn_axis_nonmonotonic.jnl
*** Running test: bn_vec_mod.jnl
*** Running test: bn685_bug_fixes.jnl
*** Running test: bn_all_ef.jnl
*** Running test: bn_startupfile.jnl
