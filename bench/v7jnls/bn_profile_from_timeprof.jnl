! bn_profile_from_tserprof.jnl
! V7.61 8/6/2020 ACM

!  Tests on timeseriesProfile data opened with use/feature=profile.


DEFINE SYMBOL use_data = use/feature=profile dsg_tserprofile_example.nc

($use_data)

show data
show grid temperature

! Listings
let pmask = {1,,1,,,,,,,}
set data/fmask=pmask 1
list temperature
list/form=comma temperature
cancel data/fmask 1

! Requests where the constraints result in no features
! lying within the locations/times selected.
list/x=-138:-131.5 temperature
plot/x=-138:-131.5 temperature
 

! If we plot with a constraint on coordinates, the labels in the upper
! left that show the region orthogonal to the plot reflect the subset 
set view upper
plot/thick temperature
show symbol lab($labnum_x) lab($labnum_y) lab($labnum_t) lab($labnum_e)

! Constrain in X; the XYTE ranges shown in the upper left show the 
! coordinate range of the data actually shown.

set view lower
plot/thick/x=-140:-133 temperature
show symbol lab($labnum_x) lab($labnum_y) lab($labnum_t) lab($labnum_e)


! or with a mask
let pmask = {1,,1,,,,,,,}
set data/fmask=pmask 1
set view lower
plot/thick temperature
show symbol lab($labnum_x) lab($labnum_y) lab($labnum_t) lab($labnum_e)
cancel data/fmask 1

! subset plots
($use_data)
plot/x=-139:-128/thick temperature
show symbol *axis*
plot/x=139w:128w/thick temperature
show symbol *axis*


! testing subsetting in Time, space. 
($use_data)
! subset profile data in z, in z/ time, in lon/lat/z
list/z=5:20 temperature
list/z=0:15/t=5-jan-2010:8-jan-2010 temperature

! Function of an instance variable to constrain data
list strindex(station_code, "33"), station_code

! Save to NetCDF
! Save an obs variable and a user-defined var on the same grid.
let/like=temperature nobig = if temperature le 9 then temperature
list/m=8:9 temperature, nobig
save/clobber/file=a.nc temperature
save/append/file=a.nc nobig
cancel data/all
use a
show data
list/m=8:9 temperature, nobig


can dat/all

! /FEATURE=none, grids are just the 1-D axes
use/feature=none dsg_tserprofile_example
show data
show grid temperature
cancel  data/all
cancel var/all


! Transforms:

!!!!!!!!!!!!
! NGD, NBD  MIN, MAX

($use_data)

list/m=1:5 rowsize, temperature[z=@ngd], temperature[z=@nbd], temperature[z=@min], temperature[z=@max]

let tmin = temperature[z=@min]
let tmax = temperature[z=@max]

list rowsize[e=@min], rowsize[e=@max]
list tmin[e=@min], tmax[e=@max]

! Which profiles have some bad data?

LET gappy = if temperature GT 8.6 then temperature

list station_code, rowsize, temperature[z=@ngd], gappy[z=@nbd]
list/m=5 temperature, gappy


!!!!!!!!!!!!
! FILLERS 8/5/2020
! FLN, FAV, FNR
! Filling ends and restarts with each new feature

($use_data)
LET gappy = if temperature GT 8.6 then temperature
list/m=8:9 gappy, gappy[z=@fln], gappy[z=@fav], gappy[z=@fnr]


!!!!!!!!!!!!
! SMOOTHERS
($use_data)
let/title="SBX" box = temperature[z=@sbx]
let/title="SWL" swl = temperature[z=@swl]
let/title="SHN" shn = temperature[z=@shn]
let/title="SPZ" spz = temperature[z=@spz] 
list/m=8 temperature, box ! , swl, shn, spz

plot/line/thick/m=8 temperature, box !, swl, shn, spz



!!!!!!!!!!!!
! DIFFERENCES

list/m=8:9 temperature, temperature[z=@ddc], temperature[z=@ddb], temperature[z=@ddf]


!!!!!!!!!!!!
! AVERAGES and  INTEGRALS

list temperature[z=@ave], temperature[z=@sum], temperature[z=@sum]/rowsize
list temperature[z=@din]
list/m=8:9 temperature, temperature[z=@iin], temperature[z=@rsum]



let s_ave = temperature[z=@ave]
list s_ave[e=@sum]



!!!!!!!!!!!!
! WEIGHTS
! @WGT weights for ave, integration

list/m=9  temperature, temperature[z=@wgt], depth[z=@ddf]




!!!!!!!!!!!!
! EVENT MASK

list/m=8:9 temperature, temperature[z=@evn:9], temperature[z=@evn:8.5]



cancel  data/all
cancel var/all

! Regridding

! Profile to fixed z axis


($use_data)

! Define a regular z axis
define axis/z=2:60:2/units=m/depth zreg

! Sanity check - regrid the depth variable should reproduce the reg-axis depths
list/order=ez/pre=6 depth[gz=zreg]

! Regrid temperature
list/order=ez/pre=6 temperature[gz=zreg]

list/order=ez/pre=6/z=10:26 temperature[gz=zreg]



cancel  data/all
cancel var/all

! demonstrate regridding model data to DSG using file data

cancel data/all
cancel var/all

($use_data)

! Make some fake gridded data: Z from the gridded z axis, 
! with small variations in X and Y

define axis/t=4-JAN-2010:10-jan-2010:6/units=hours/t0=1-jan-2010 tfake
define axis/x=-140:-130:0.5/units=degrees_east/modulo xfake
define axis/y=38:45:0.5/units=degrees_north yfake
define axis/z=0:71:2/depth/unit=meters zfake

define grid/x=xfake/y=yfake/z=zfake/t=tfake gfake
let/title="z-data from grid" zz = z[g=gfake] + 0.05*x[g=gfake]+ 0.1* y[g=gfake]+ 0001*t[g=gfake]
save/clobber/file=fake_model_temp.nc/outtype=float zz
cancel variables/all


USE fake_model_temp.nc
list/m=8 zz[d=fake_model_temp,g=temperature[d=1]]

! Compare, the gridded data at that location 
list/x=-137.4/y=45/t="7-jan-2010:01" zz

