#! /bin/csh -f
# run the full benchmark suite

# usage % run_all [ /full/path/to/ferret [ FER_EXTERNAL_FUNCTIONS/directory/to/use ] ]

if ( $# > 1 ) then
   set fver = "$1"
   set efdir = "$2"
else if ( $# > 0 ) then
   set fver = "$1"
   set efdir = ""
else
   set fver = ""
   set efdir = ""
endif

umask 002     #  make all files group deletable  3/16

if ( $HOSTTYPE =~ *x86_64-linux*) then
    set machine = "x86_64-linux"
else if ( $HOSTTYPE =~ *linux*) then
    set machine = "linux"
else
   set machine = "unknown_host"
endif

if ( "$fver" == "" ) then
   echo "Enter the path (including filename) to the FERRET version of choice"
   set fver = "$<"
endif

# which external function libraries to use
if ( "$efdir" == "" ) then
   echo "Enter the directory containing the external function libraries"
   set efdir = "$<"
endif

# *acm* 4/5/05 optionally do externally-linked external function tests 
set do_shared_obj = ""
while ( "$do_shared_obj" != "y" && "$do_shared_obj" != "n" )
   echo "Run tests of externally-linked external functions? Enter y or n"
   set do_shared_obj = $<
end

# background info to go in the benchmark file
echo "Enter your name"
set bmarker = "$<"
echo "Enter comment about this benchmark or this version of Ferret"
set bcomment = "$<"


set date_stamp = `date +'%d%h%yAT%H%M'|tr '[A-Z]' '[a-z]'`
set log_file = "all_${date_stamp}.${machine}_log"
set err_file = "all_${date_stamp}.${machine}_err"
set plt_file = "all_${date_stamp}.${machine}_plt"
set ncdump_log = "all_${date_stamp}.${machine}_ncdump"
set ncdump_file = "all_ncdump.out"
rm -f ncdump_file $ncdump_file
echo " " > $ncdump_file

#set up external functions search path
setenv FER_EXTERNAL_FUNCTIONS $efdir

# set up the binary unformatted stream test file as a machine-specific link
set machine_stream = "stream10by5_{$machine}.unf"
if ( ! -e  $machine_stream ) then
   echo File $machine_stream does not exist.
   echo Benchmark bn420_stream will fail.
   echo To create $machine_stream compile and run make_stream_file.F
   echo Then rename stream10by5.unf to $machine_stream
   echo -n 'Continue anyway? (answer "y" for yes)'
   set answer = $<
   if ($answer != "y") exit 0
endif
rm -f stream_data_link.unf
ln -s $machine_stream stream_data_link.unf

#set up proper stream testing jnl file - depends on endianness
rm -f bn_test_stream.jnl
if ($machine == "linux" || $machine == "x86_64-linux" ) then
    ln -s bn_test_stream_little.jnl bn_test_stream.jnl
else
    ln -s bn_test_stream_big.jnl bn_test_stream.jnl
endif

echo "Log output in $log_file  Errors in $err_file" 
echo "Procedure run_all to run all FERRET benchmarks" >&$log_file
echo "Running FERRET version $fver" >>&$log_file
ls -l $fver >>&$log_file
echo "Using external functions from $efdir" >>&$log_file
echo "Running the tests of external functions $do_shared_obj" >>&$log_file
echo "Benchmark run by $bmarker" >>&$log_file
echo "Note: $bcomment" >>&$log_file
echo "ncdump output will be in $ncdump_file, and appended to this log file " >>&$log_file

#set up a generic data environment
echo "***** Restricting Ferret paths to bench directory *****" >>&$log_file
source bench_environment >>&$log_file
Fenv >>&$log_file

touch F.cdf snoopy.dat
set temp_files = "test.dat test.gt test.unf WV.J34K56L7 F*.cdf test*.cdf newjournal.jnl fort.41 bench.mgm"
foreach file ($temp_files)
      /bin/rm -f $file
end

# 10/97 *kob* mv last created bnplot files to the last_plot directory
#  4/11 *acm* mv last created bat.plt* files to the last_plot directory
mv bn*.plt* last_plot
mv bat*.plt* last_plot
mv p*.plt* last_plot
mv bn*.gif* last_plot
mv bn*.ps* last_plot

set now = `date`
echo "Beginning at $now" >>&$log_file
cp $log_file $err_file
echo "Beginning at $now"

(($fver -script bn_all.jnl) >>$log_file) >>&$err_file

# check status before continuing *kob* 4/98
if ($status) then
    mv $ncdump_file $ncdump_log
    echo "FERRET ERRROR*********************************"
    echo "FERRET ERRROR*********************************" >>$log_file
    echo "FERRET ERRROR*********************************" >>$err_file
    exit 1
endif

# 5/05 *acm* run tests of externally-linked external functions
if ( $do_shared_obj == "y" ) then
  ($fver <bn_all_ef.jnl >>$log_file) >>&$err_file
endif

# Append the ncdump output file to the log file
echo  " " >>&$log_file
echo  "-----" >>&$log_file
echo  "Appending ncdump output" >>&$log_file
cat  $ncdump_file >>& $log_file
echo  "-----" >>&$log_file
echo  "end of ncdump output" >>&$log_file
echo  " " >>&$log_file
mv $ncdump_file $ncdump_log

echo "about to run test of .ferret script"
if (-e $HOME/.ferret) then 
  rm -f ./keep.ferret
  cp $HOME/.ferret ./keep.ferret
  rm -f $HOME/.ferret

cp -f ferret_startup $HOME/.ferret
($fver  <bn_startupfile_shell.jnl >> $log_file) >>& $err_file
rm -f $HOME/.ferret

if (-e keep.ferret) then 
  mv keep.ferret $HOME/.ferret
endif

set hold_display = $DISPLAY
unsetenv DISPLAY
echo "Display no longer set, about to run batch gif test"
($fver -gif -script bn_gif.jnl >> $log_file) >>& $err_file
echo "Display still not set, about to run batch ps test"
($fver -batch bnplot.ps -script bn_ps.jnl >> $log_file) >>& $err_file
echo "Display still not set, about to run batch metafile test"
($fver -batch bat.plt -script bn_batch_metafile.jnl >> $log_file) >>& $err_file
setenv DISPLAY $hold_display

set now = `date`
echo  "Ended at $now" >>&$err_file
echo  "Ended at $now" >>&$log_file
echo  "Ended at $now"

#rename plt and gif files - necessary for saving them under cvs
set count = 1
while ($count < 5)
    mv bnplot.plt.~$count~ bnplot-$count.plt
    @ count++
end

mv bnplot.gif.~1~ bnplot-1.gif
mv bnplot.gif.~2~ bnplot-2.gif

mv new.plt bat.plt_9
mv bat.plt bat.plt_8
set count = 1
while ($count < 8)
    mv bat.plt.~$count~ bat.plt_$count
    @ count++
end

#Note about checking transparency
echo "open test_trans.html in a browser to test transparency option in gif mode. The continents should be gray"
